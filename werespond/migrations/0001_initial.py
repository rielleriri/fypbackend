# Generated by Django 3.0.5 on 2020-08-05 15:30

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('achv_name', models.CharField(max_length=50)),
                ('achv_condition', models.CharField(max_length=50)),
                ('achv_created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grp_profile_pic', models.ImageField(null=True, upload_to=None)),
                ('grp_display_pic', models.ImageField(null=True, upload_to=None)),
                ('grp_name', models.CharField(max_length=50)),
                ('grp_description', models.CharField(max_length=300)),
                ('grp_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('grp_website', models.CharField(max_length=155)),
                ('grp_created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post_body', models.CharField(max_length=1000)),
                ('post_image', models.ImageField(blank=True, null=True, upload_to=None)),
                ('post_date', models.DateTimeField(auto_now_add=True)),
                ('post_group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='werespond.Group')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('profile_hp', models.IntegerField(primary_key=True, serialize=False, unique=True)),
                ('profile_name', models.CharField(max_length=60)),
                ('profile_gender', models.CharField(choices=[('m', 'Male'), ('f', 'Female')], default='m', max_length=1)),
                ('is_scdf', models.BooleanField(default=False)),
                ('profile_email', models.EmailField(max_length=254)),
                ('profile_created_at', models.DateTimeField(auto_now_add=True, verbose_name='User Created At')),
            ],
        ),
        migrations.CreateModel(
            name='AchievementReward',
            fields=[
                ('rew_achievement', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='werespond.Achievement')),
                ('rew_reward', models.ImageField(null=True, upload_to=None)),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_location', models.CharField(max_length=250)),
                ('report_description', models.CharField(max_length=250)),
                ('report_image', models.ImageField(blank=True, upload_to=None)),
                ('report_date', models.DateTimeField(auto_now_add=True)),
                ('report_type', models.CharField(choices=[('c', 'Cardiac Arrest'), ('f', 'Fire Report'), ('h', 'Fire Hazard')], max_length=1)),
                ('report_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='werespond.Profile')),
            ],
        ),
        migrations.CreateModel(
            name='PostVote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vote_post', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_who_voted', to='werespond.Post')),
                ('vote_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='votes', to='werespond.Profile')),
            ],
        ),
        migrations.CreateModel(
            name='PostSave',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('save_post', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_who_saved', to='werespond.Post')),
                ('save_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='saves', to='werespond.Profile')),
            ],
        ),
        migrations.AddField(
            model_name='post',
            name='post_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='werespond.Profile'),
        ),
        migrations.AddField(
            model_name='group',
            name='grp_members',
            field=models.ManyToManyField(blank=True, related_name='groups', to='werespond.Profile'),
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_slots', models.IntegerField()),
                ('event_image', models.ImageField(null=True, upload_to=None)),
                ('event_name', models.CharField(max_length=50)),
                ('event_description', models.CharField(max_length=500)),
                ('event_date', models.DateField()),
                ('event_time', models.TimeField()),
                ('event_venue', models.CharField(max_length=200)),
                ('event_created_at', models.DateTimeField(auto_now_add=True)),
                ('event_users', models.ManyToManyField(blank=True, related_name='events', to='werespond.Profile')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment_content', models.CharField(max_length=300)),
                ('comment_date', models.DateTimeField(auto_now_add=True)),
                ('comment_post', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_who_commented', to='werespond.Post')),
                ('comment_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='werespond.Profile')),
            ],
        ),
        migrations.CreateModel(
            name='Certificate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cert_cert_type', models.CharField(choices=[('c', 'CPR'), ('a', 'AED'), ('b', 'CPR+AED'), ('s', 'Standard First Aid'), ('o', 'Occupational First Aid'), ('p', 'Psychological First Aid'), ('f', 'Fire Safety')], max_length=1)),
                ('cert_image', models.ImageField(null=True, upload_to=None)),
                ('cert_expiry', models.DateField()),
                ('cert_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='certificates', to='werespond.Profile')),
            ],
        ),
        migrations.CreateModel(
            name='Case',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('case_location', models.CharField(max_length=600)),
                ('case_lattitude', models.FloatField()),
                ('case_longitude', models.FloatField()),
                ('case_time', models.DateField(auto_now_add=True)),
                ('case_description', models.CharField(max_length=600)),
                ('case_updated_at', models.DateTimeField(auto_now=True)),
                ('case_type', models.CharField(choices=[('c', 'Cardiac Arrest'), ('f', 'Fire Case')], max_length=1, verbose_name='Case Type')),
                ('case_members', models.ManyToManyField(blank=True, related_name='cases', to='werespond.Profile')),
            ],
        ),
        migrations.CreateModel(
            name='AwardedCertificate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('awcert_cert_type', models.CharField(choices=[('c', 'CPR'), ('a', 'AED'), ('b', 'CPR+AED'), ('s', 'Standard First Aid'), ('o', 'Occupational First Aid'), ('p', 'Psychological First Aid'), ('f', 'Fire Safety')], max_length=1, verbose_name='User Cert Type')),
                ('awcert_expiry', models.DateField()),
                ('awcert_awarded_at', models.DateTimeField(auto_now_add=True)),
                ('awcert_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='awarded', to='werespond.Profile')),
            ],
        ),
        migrations.AddField(
            model_name='achievement',
            name='achv_users',
            field=models.ManyToManyField(blank=True, related_name='achievements', to='werespond.Profile'),
        ),
    ]
